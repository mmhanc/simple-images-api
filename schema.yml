openapi: 3.0.3
info:
  title: Serving images API
  version: 0.0.0
  description: Simple REST api for serving images
paths:
  /api/images/:
    get:
      operationId: api_images_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: title
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImageList'
          description: ''
    post:
      operationId: api_images_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageCreate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageCreate'
          description: ''
  /api/images/{id}/:
    get:
      operationId: api_images_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    put:
      operationId: api_images_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    patch:
      operationId: api_images_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImage'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    delete:
      operationId: api_images_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Image:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
        title:
          type: string
          maxLength: 255
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
        height:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - height
      - id
      - title
      - url
      - width
    ImageCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        width:
          type: integer
          minimum: 1
        height:
          type: integer
          minimum: 1
        image:
          type: string
          format: uri
        keep_ratio:
          type: boolean
          default: true
          title: Keep aspect ratio
      required:
      - image
      - title
    PaginatedImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Image'
    PatchedImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
        title:
          type: string
          maxLength: 255
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
        height:
          type: integer
          maximum: 2147483647
          minimum: 0
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
